{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage/HomePage.tsx","types/SortParam.ts","utils/getParentHelper.ts","utils/variables.ts","api.ts","utils/searchHelper.ts","components/SearchLink/SearchLink.tsx","components/FilterCenturyItem/FilterCenturyItem.tsx","types/ColumnNames.ts","types/PersonSex.ts","components/FilterSexItem/FilterSexItem.tsx","components/PeopleFilters/PeopleFilters.tsx","components/Loader/Loader.tsx","types/Sex.ts","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/ColumnNameItem/ColumnNameItem.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","getLinkClass","isActive","cn","className","role","to","App","HomePage","SortParam","getParent","people","parentName","find","name","CENTURIES","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","addParent","map","person","motherName","fatherName","mother","undefined","father","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","CenturyItem","curCentury","centuries","getAll","isSelected","includes","filter","age","ColumnNames","PersonSex","PersonSexItem","sexValue","sex","get","sexParam","PeopleFilters","setSearchParams","query","keys","type","placeholder","onChange","event","target","century","length","href","Loader","Sex","PersonLink","slug","isFemale","FEMALE","PersonItem","selectedPersonSlug","born","died","ColumnName","sortOption","lowerCasedValue","toLowerCase","sort","order","PeopleTable","filteredPeople","setFilteredPeople","useParams","useState","sortedPeople","setSortedPeople","filters","useEffect","sortParam","a","b","Name","localeCompare","Born","Died","sortPeople","filterOption","personBirthCentury","Math","ceil","filterPeople","reverse","PeoplePage","setPeople","isLoading","setIsLoading","hasError","setHasError","getPeople","peopleFromServer","catch","finally","hasErrorMessage","hasNoPeopleOnServer","hasNoMatchingPeople","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"0QAGaA,EAAS,WACpB,IAAMC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC5D,cACA,CAAE,8BAA+BD,GAFd,EAKrB,OACE,qBACE,UAAQ,MACRE,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UAEE,cAAC,IAAD,CAASA,UAAWH,EAAcK,GAAG,IAArC,kBAIA,cAAC,IAAD,CACE,eAAa,OACbF,UAAWH,EACXK,GAAG,UAHL,0BAWT,EC7BYC,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,qBAAKH,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,ECjBYI,EAAW,kBACtB,oBAAIJ,UAAU,QAAd,sBADsB,E,2CCAZK,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,YAAYA,EAAZ,UAAYA,EAAZ,YAAYA,EAAZ,YAAYA,CAAZ,MCEO,SAASC,EAAUC,EAAkBC,GAC1C,OAAOD,EAAOE,MAAK,qBAAGC,OAAoBF,CAAvB,GACpB,CCJM,IAMMG,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,MAGrCC,EAAU,oECHvB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,C,sDAEM,iHACED,EAAK,KACTK,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,KAHX,4C,sBAMA,SAASC,EAAUf,GACxB,OAAOA,EAAOgB,KAAI,SAAAC,GAChB,IAAQC,EAA2BD,EAA3BC,WAAYC,EAAeF,EAAfE,WAEpB,OAAO,2BACFF,GADL,IAEEG,OAAQF,EAAanB,EAAUC,EAAQkB,QAAcG,EACrDC,OAAQH,EAAapB,EAAUC,EAAQmB,QAAcE,GAExD,GACF,C,YCtBM,SAASE,EACdC,EACAC,GAEA,IAAMC,EAAY,IAAIC,gBACpBH,EAAcI,YAkBhB,OAfAC,OAAOC,QAAQL,GACZM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACX,OAAVA,EACFP,EAAUQ,OAAOF,GACRG,MAAMC,QAAQH,IACvBP,EAAUQ,OAAOF,GAEjBC,EAAMF,SAAQ,SAAAM,GACZX,EAAUY,OAAON,EAAKK,EACvB,KAEDX,EAAUa,IAAIP,EAAKC,EAEtB,IAEIP,EAAUE,UAClB,C,4BCbYY,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACGC,EACC,iBACJ,EAAuBC,cAAhBC,EAAP,oBAEA,OACE,cAAC,IAAD,yBAIElD,GAAI,CACFmD,OAAQvB,EAAcsB,EAAcH,KAElCC,GAPN,aASGF,IAGN,EC1BYM,EAA+B,SAAC,GAAe,IAKnCC,EALsBf,EAAY,EAAZA,MAC7C,EAAuBW,cACjBK,EADN,oBAC+BC,OAAO,cAAgB,GAChDC,EAAaF,EAAUG,SAASnB,GAQtC,OACE,cAAC,EAAD,CACE,UAAQ,UACRxC,UAAWD,IACT,SACA,OACA,CAAE,UAAW2D,IAEfT,OAAQ,CAAEO,WAdSD,EAcgBf,EAb9BgB,EAAUG,SAASJ,GACtBC,EAAUI,QAAO,SAACC,GAAD,OAAiBA,IAAQN,CAAzB,IADd,sBAECC,GAFD,CAEYD,MAInB,SASGf,GAGN,ECjCWsB,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,YAAYA,EAAZ,UAAYA,EAAZ,YAAYA,EAAZ,YAAYA,CAAZ,MCAYC,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,OAAYA,EAAZ,SAAYA,EAAZ,WAAYA,CAAZ,MCWaC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/C,EAAuBd,cACjBe,EADN,oBACyBC,IAAI,QAAU,GACnCC,EAA0BL,EAAUE,GACpCnE,EAAWoE,IAAQE,EAOvB,MALiB,QAAbH,IACFG,EAAW,KACXtE,GAAYoE,GAIZ,cAAC,EAAD,CACElE,UAAWD,IACT,CAAE,YAAaD,IAEjBmD,OAAQ,CAAEiB,IAAKE,GAJjB,SAMGH,GAGN,ECrBYI,EAAgB,WAC3B,MAAwClB,cAAxC,mBAAOC,EAAP,KAAqBkB,EAArB,KACMC,EAAQnB,EAAae,IAAI,UAAY,GACrCX,EAAYJ,EAAaK,OAAO,cAAgB,GAYtD,OACE,sBAAKzD,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,mBAAGA,UAAU,aAAa,UAAQ,YAAlC,SACIoC,OAAOoC,KAAKT,GACXxC,KAAI,SAAA0C,GAAQ,OACX,cAAC,EAAD,CAA8BA,SAAUA,GAApBA,EADT,MAKjB,qBAAKjE,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEwC,MAAO+B,EACP,UAAQ,aACRE,KAAK,SACLzE,UAAU,QACV0E,YAAY,SACZC,SA7BgB,SAACC,GACpBA,EAAMC,OAAOrC,MAIhB8B,EAAgBxC,EAAcsB,EAC5B,CAAEmB,MAAOK,EAAMC,OAAOrC,SAJxB8B,EAAgBxC,EAAcsB,EAC5B,CAAEmB,MAAO,OAKd,IAwBO,sBAAMvE,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,gBAK/C,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiC,UAAQ,gBAAxD,UACE,qBAAKA,UAAU,aAAf,SACGW,EAAUY,KAAI,SAAAuD,GAAO,OACpB,cAAC,EAAD,CAEEtC,MAAOsC,GADFA,EAFa,MAQxB,qBAAK9E,UAAU,mBAAf,SACE,cAAC,EAAD,CACE,UAAQ,aACRA,UAAWD,IACT,SACA,aACA,CAAE,gBAAiByD,EAAUuB,SAE/B9B,OAAQ,CAAEO,UAAW,IAPvB,wBAeN,qBAAKxD,UAAU,cAAf,SACE,mBACEA,UAAU,0CACVgF,KAAK,WAFP,mCASP,ECzFYC,G,MAAS,kBACpB,qBAAKjF,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCFVkF,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,WAAYA,EAAZ,SAAYA,CAAZ,MCWaC,EAA8B,SAAC,GAAgB,IAAd3D,EAAa,EAAbA,OAE1Cd,EAGEc,EAHFd,KACAwD,EAEE1C,EAFF0C,IACAkB,EACE5D,EADF4D,KAGF,EAAuBjC,cAAhBC,EAAP,oBAEMiC,EAAWnB,IAAQgB,EAAII,OAE7B,OACE,cAAC,IAAD,CACEpF,GAAE,oBAAekF,EAAf,YAAuBhC,EAAajB,YACtCnC,UAAWD,IAAG,CAAE,kBAAmBsF,IAFrC,SAIG3E,GAGN,EClBY6E,EAA8B,SAAC,GAGrC,IAFL/D,EAEI,EAFJA,OACAgE,EACI,EADJA,mBAGEJ,EAQE5D,EARF4D,KACAlB,EAOE1C,EAPF0C,IACAuB,EAMEjE,EANFiE,KACAC,EAKElE,EALFkE,KACAhE,EAIEF,EAJFE,WACAD,EAGED,EAHFC,WACAE,EAEEH,EAFFG,OACAE,EACEL,EADFK,OAGI6B,EAAa8B,IAAuBJ,EAE1C,OACE,qBACE,UAAQ,SACRpF,UAAWD,IAAG,CAAE,yBAA0B2D,IAF5C,UAIE,6BACE,cAAC,EAAD,CAAYlC,OAAQA,MAGtB,6BAAK0C,IAEL,6BAAKuB,IAEL,6BAAKC,IAEL,6BACG/D,EACI,cAAC,EAAD,CAAYH,OAAQG,IACrBF,GZ/CiB,MYkDvB,6BACGI,EACI,cAAC,EAAD,CAAYL,OAAQK,IACrBH,GZrDiB,QYyD5B,EC/CYiE,EAA8B,SAAC,GAAe,IAQlCC,EARqBpD,EAAY,EAAZA,MAC5C,EAAuBW,cAAhBC,EAAP,oBAEMyC,EAAkBrD,EAAMsD,cAExBC,EAAO3C,EAAae,IAAI,SAAW,GACnC6B,EAAQ5C,EAAae,IAAI,UAAY,GAc3C,OACE,6BACE,uBAAMnE,UAAU,8BAAhB,UACGwC,EACD,cAAC,EAAD,CACES,QAjBe2C,EAiBOC,EAhBxBD,IAAeG,EACV,CAAEA,KAAMH,EAAYI,MAAO,MAGhCD,IAASH,GAAeI,EAIrB,CAAED,KAAM,KAAMC,MAAO,MAHnB,CAAED,KAAMH,EAAYI,MAAO,SAUhC,SAGE,uBAAMhG,UAAU,OAAhB,UACG6F,IAAoBE,GAAS,mBAAG/F,UAAU,gBAC1C6F,IAAoBE,IAASC,GAC5B,mBAAGhG,UAAU,mBAEdgG,GAASH,IAAoBE,GAC5B,mBAAG/F,UAAU,8BAZdwC,EAmBZ,EChCYyD,EAA+B,SAAC,GAItC,IAHL1F,EAGI,EAHJA,OACA2F,EAEI,EAFJA,eACAC,EACI,EADJA,kBAGMX,EADWY,cAAThB,MAC2B,GAEnC,EAAwCiB,mBAAS9F,GAAjD,mBAAO+F,EAAP,KAAqBC,EAArB,KAEA,EAAuBpD,cAAhBC,EAAP,oBACM2C,EAAkC3C,EAAae,IAAI,SAAW,GAC9D6B,EAAQ5C,EAAae,IAAI,UAAY,GACrCI,EAAQnB,EAAae,IAAI,UAAY,GACrCX,EAAYJ,EAAaK,OAAO,cAAgB,GAChDS,EAAMd,EAAae,IAAI,QAAU,GAEjCqC,EAAsB,CAC1BjC,QACAf,YACAU,OAeF,OAZAuC,qBAAU,WACRF,EbdG,SAAoBhG,EAAkBmG,GAC3C,OAAIA,EACK,YAAInG,GAAQwF,MAAK,SAACY,EAAGC,GAC1B,OAAQF,GACN,KAAMrG,EAAUwG,KAChB,KAAMxG,EAAU6E,IACd,OAAOyB,EAAED,GAAWI,cAAcF,EAAEF,IAGtC,KAAMrG,EAAU0G,KAChB,KAAM1G,EAAU2G,KACd,OAAOL,EAAED,GAAcE,EAAEF,GAG3B,QACE,OAAO,EAGZ,IAGI,YAAInG,EACZ,CaRmB0G,CAAW1G,EAAQwF,GACpC,GAAE,CAACA,EAAMxB,EAAOf,EAAUuB,OAAQb,IAEnCuC,qBAAU,WACRN,EbMG,SACLe,EACA3G,GAEA,IAAI2F,EAAiB3F,EAsBrB,OApBI2G,EAAahD,MACfgC,EAAiBA,EACdtC,QAAO,SAAApC,GAAM,OAAIA,EAAO0C,MAAQgD,EAAahD,GAAhC,KAGdgD,EAAa1D,UAAUuB,SACzBmB,EAAiBA,EAAetC,QAAO,SAAApC,GACrC,IAAM2F,EAAqBC,KAAKC,KAAK7F,EAAOiE,KD/DlB,KCiE1B,OAAOyB,EAAa1D,UAAUG,SAASwD,EAAmBhF,WAC3D,KAGC+E,EAAa3C,QACf2B,EAAiBA,EACdtC,QAAO,SAAApC,GAAM,eAAIA,EAAOd,KAAKiD,SAASuD,EAAa3C,SAAlC,UACjB/C,EAAOC,kBADU,aACjB,EAAmBkC,SAASuD,EAAa3C,UADxB,UAEjB/C,EAAOE,kBAFU,aAEjB,EAAmBiC,SAASuD,EAAa3C,OAF5B,KAKX2B,CACR,CajCqBoB,CAAad,EAASF,GACzC,GAAE,CAAC/B,EAAOf,EAAUuB,OAAQb,EAAKoC,Id3CX,Sc6CnBN,GACFE,EAAeqB,UAIf,wBACE,UAAQ,cACRvH,UAAU,uDAFZ,UAIE,gCACE,+BACIoC,OAAOoC,KAAKV,GACXvC,KAAI,SAAAb,GAAI,OACP,cAAC,EAAD,CAEE8B,MAAO9B,GADFA,EAFA,IAOX,wCAEA,6CAIJ,gCACGwF,EAAe3E,KAAI,SAAAC,GAAM,OACxB,cAAC,EAAD,CAEEA,OAAQA,EACRgE,mBAAoBA,GAFfhE,EAAO4D,KAFU,MAS5B,cAAC,IAAD,MAGL,EC/EYoC,EAAa,WACxB,MAA4BnB,mBAAmB,IAA/C,mBAAO9F,EAAP,KAAekH,EAAf,KACA,EAA4CpB,mBAAmB,IAA/D,mBAAOH,EAAP,KAAuBC,EAAvB,KACA,EAAkCE,oBAAS,GAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAAgCtB,oBAAS,GAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KAEApB,qBAAU,WACRkB,GAAa,GdLV,WAAP,+BcOIG,GACG5G,MAAK,SAAC6G,GACLN,EAAUnG,EAAUyG,IACpB5B,EAAkB7E,EAAUyG,GAC7B,IACAC,OAAM,WACLH,GAAY,GACZJ,EAAU,GACX,IACAQ,SAAQ,WACPN,GAAa,EACd,GACJ,GAAE,IAEH,IAAMO,EAAkBN,IAAaF,EAC/BS,GAAuB5H,EAAOwE,SAAW6C,IAAaF,EACtDU,GAAuBV,IACzBxB,EAAenB,SACfoD,EAEJ,OACE,qCACE,oBAAInI,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,qBAAKA,UAAU,uCAAf,UACI0H,GAAc,cAAC,EAAD,MAGlB,qBAAK1H,UAAU,SAAf,SACE,sBAAKA,UAAU,sBAAf,UACG0H,GAAc,cAAC,EAAD,IAEdQ,GACC,mBAAG,UAAQ,qBAAX,kCAGDC,GACC,mBAAG,UAAQ,kBAAX,+CAKDC,GACC,2FAKC7H,EAAOwE,QACR,cAAC,EAAD,CACExE,OAAQA,EACR2F,eAAgBA,EAChBC,kBAAmBA,gBASpC,EChFYkC,EAAe,kBAC1B,oBAAIrI,UAAU,QAAd,2BAD0B,ECYfsI,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtI,GAAG,IAAIwI,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YARb,ECLpBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,EAAD,I","file":"static/js/main.d89a5261.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export enum SortParam {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { Person } from '../types';\n\nexport function getParent(people: Person[], parentName: string) {\n  return people.find(({ name }) => name === parentName);\n}\n","export const NOT_SET_VALUE = '-';\n\nexport const YEARS_IN_CENTURY = 100;\n\nexport const DESC_SORT = 'desc';\n\nexport const CENTURIES = ['16', '17', '18', '19', '20'];\n\n// eslint-disable-next-line max-len\nexport const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n","import { FilterType } from './types/FilterType';\nimport { Person } from './types/Person';\nimport { SortParam } from './types/SortParam';\nimport { getParent } from './utils/getParentHelper';\nimport { API_URL, YEARS_IN_CENTURY } from './utils/variables';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n\nexport function addParent(people: Person[]) {\n  return people.map(person => {\n    const { motherName, fatherName } = person;\n\n    return {\n      ...person,\n      mother: motherName ? getParent(people, motherName) : undefined,\n      father: fatherName ? getParent(people, fatherName) : undefined,\n    };\n  });\n}\n\nexport function sortPeople(people: Person[], sortParam: SortParam | string) {\n  if (sortParam) {\n    return [...people].sort((a, b) => {\n      switch (sortParam) {\n        case (SortParam.Name):\n        case (SortParam.Sex): {\n          return a[sortParam].localeCompare(b[sortParam]);\n        }\n\n        case (SortParam.Born):\n        case (SortParam.Died): {\n          return a[sortParam] - (b[sortParam]);\n        }\n\n        default: {\n          return 0;\n        }\n      }\n    });\n  }\n\n  return [...people];\n}\n\nexport function filterPeople(\n  filterOption: FilterType,\n  people: Person[],\n) {\n  let filteredPeople = people;\n\n  if (filterOption.sex) {\n    filteredPeople = filteredPeople\n      .filter(person => person.sex === filterOption.sex);\n  }\n\n  if (filterOption.centuries.length) {\n    filteredPeople = filteredPeople.filter(person => {\n      const personBirthCentury = Math.ceil(person.born / YEARS_IN_CENTURY);\n\n      return filterOption.centuries.includes(personBirthCentury.toString());\n    });\n  }\n\n  if (filterOption.query) {\n    filteredPeople = filteredPeople\n      .filter(person => person.name.includes(filterOption.query)\n    || person.motherName?.includes(filterOption.query)\n    || person.fatherName?.includes(filterOption.query));\n  }\n\n  return filteredPeople;\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\ntype Props = {\n  value: string,\n};\n\nexport const CenturyItem: React.FC<Props> = ({ value }) => {\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const isSelected = centuries.includes(value);\n\n  const toggleCentury = (curCentury: string) => {\n    return centuries.includes(curCentury)\n      ? centuries.filter((age: string) => age !== curCentury)\n      : [...centuries, curCentury];\n  };\n\n  return (\n    <SearchLink\n      data-cy=\"century\"\n      className={cn(\n        'button',\n        'mr-1',\n        { 'is-info': isSelected },\n      )}\n      params={{ centuries: toggleCentury(value) }}\n    >\n      {value}\n    </SearchLink>\n  );\n};\n","export enum ColumnNames {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n}\n","export enum PersonSex {\n  All = '',\n  Male = 'm',\n  Female = 'f',\n}\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { SearchLink } from '../SearchLink';\nimport { PersonSex } from '../../types';\n\ntype Props = {\n  sexValue: keyof typeof PersonSex,\n};\n\nexport const PersonSexItem: React.FC<Props> = ({ sexValue }) => {\n  const [searchParams] = useSearchParams();\n  const sex = searchParams.get('sex') || '';\n  let sexParam: string | null = PersonSex[sexValue];\n  let isActive = sex === sexParam;\n\n  if (sexValue === 'All') {\n    sexParam = null;\n    isActive = !sex;\n  }\n\n  return (\n    <SearchLink\n      className={cn(\n        { 'is-active': isActive },\n      )}\n      params={{ sex: sexParam }}\n    >\n      {sexValue}\n    </SearchLink>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { CenturyItem } from '../FilterCenturyItem';\nimport { PersonSexItem } from '../FilterSexItem';\nimport { SearchLink } from '../SearchLink';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { PersonSex } from '../../types';\nimport { CENTURIES } from '../../utils/variables';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.value) {\n      setSearchParams(getSearchWith(searchParams,\n        { query: null }));\n    } else {\n      setSearchParams(getSearchWith(searchParams,\n        { query: event.target.value }));\n    }\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {(Object.keys(PersonSex) as Array<keyof typeof PersonSex>)\n          .map(sexValue => (\n            <PersonSexItem key={sexValue} sexValue={sexValue} />\n          ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            value={query}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map(century => (\n              <CenturyItem\n                key={century}\n                value={century}\n              />\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn(\n                'button',\n                'is-success',\n                { 'is-outlined': !!centuries.length },\n              )}\n              params={{ centuries: [] }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum Sex {\n  FEMALE = 'f',\n  MALE = 'm',\n}\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { Sex } from '../../types/Sex';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  const [searchParams] = useSearchParams();\n\n  const isFemale = sex === Sex.FEMALE;\n\n  return (\n    <Link\n      to={`../people/${slug}?${searchParams.toString()}`}\n      className={cn({ 'has-text-danger': isFemale })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { NOT_SET_VALUE } from '../../utils/variables';\n\ntype Props = {\n  person: Person;\n  selectedPersonSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({\n  person,\n  selectedPersonSlug,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  const isSelected = selectedPersonSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n\n      <td>{born}</td>\n\n      <td>{died}</td>\n\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : motherName || NOT_SET_VALUE}\n      </td>\n\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : fatherName || NOT_SET_VALUE}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { SearchLink } from '../SearchLink';\nimport { ColumnNames } from '../../types';\n\ntype Props = {\n  value: keyof typeof ColumnNames,\n};\n\nexport const ColumnName: React.FC<Props> = ({ value }) => {\n  const [searchParams] = useSearchParams();\n\n  const lowerCasedValue = value.toLowerCase();\n\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const getSortParams = (sortOption: string) => {\n    if (sortOption !== sort) {\n      return { sort: sortOption, order: null };\n    }\n\n    if (sort === sortOption && !order) {\n      return { sort: sortOption, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  return (\n    <th key={value}>\n      <span className=\"is-flex is-flex-wrap-nowrap\">\n        {value}\n        <SearchLink\n          params={getSortParams(lowerCasedValue)}\n        >\n          <span className=\"icon\">\n            {lowerCasedValue !== sort && (<i className=\"fas fa-sort\" />)}\n            {lowerCasedValue === sort && !order && (\n              <i className=\"fas fa-sort-up\" />\n            )}\n            {order && lowerCasedValue === sort && (\n              <i className=\"fas fa-sort-down\" />\n            )}\n          </span>\n        </SearchLink>\n      </span>\n    </th>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useParams, useSearchParams } from 'react-router-dom';\n\nimport { PersonItem } from '../PersonItem';\nimport { ColumnName } from '../ColumnNameItem';\n\nimport { filterPeople, sortPeople } from '../../api';\n\nimport { ColumnNames, FilterType, Person } from '../../types';\nimport { SortParam } from '../../types/SortParam';\nimport { DESC_SORT } from '../../utils/variables';\n\ntype Props = {\n  people: Person[],\n  filteredPeople: Person[],\n  setFilteredPeople: React.Dispatch<React.SetStateAction<Person[]>>,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  filteredPeople,\n  setFilteredPeople,\n}) => {\n  const { slug } = useParams();\n  const selectedPersonSlug = slug || '';\n\n  const [sortedPeople, setSortedPeople] = useState(people);\n\n  const [searchParams] = useSearchParams();\n  const sort: typeof SortParam | string = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || '';\n\n  const filters: FilterType = {\n    query,\n    centuries,\n    sex,\n  };\n\n  useEffect(() => {\n    setSortedPeople(sortPeople(people, sort));\n  }, [sort, query, centuries.length, sex]);\n\n  useEffect(() => {\n    setFilteredPeople(filterPeople(filters, sortedPeople));\n  }, [query, centuries.length, sex, sortedPeople]);\n\n  if (order === DESC_SORT) {\n    filteredPeople.reverse();\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {(Object.keys(ColumnNames) as Array<keyof typeof ColumnNames>)\n            .map(name => (\n              <ColumnName\n                key={name}\n                value={name}\n              />\n            ))}\n\n          <th>Mother</th>\n\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredPeople.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            selectedPersonSlug={selectedPersonSlug}\n          />\n        ))}\n      </tbody>\n\n      <Outlet />\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { addParent, getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleFilters } from '../../components/PeopleFilters';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(addParent(peopleFromServer));\n        setFilteredPeople(addParent(peopleFromServer));\n      })\n      .catch(() => {\n        setHasError(true);\n        setPeople([]);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const hasErrorMessage = hasError && !isLoading;\n  const hasNoPeopleOnServer = !people.length && !hasError && !isLoading;\n  const hasNoMatchingPeople = !isLoading\n  && !filteredPeople.length\n  && !hasNoPeopleOnServer;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (<PeopleFilters />)}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (<Loader />)}\n\n              {hasErrorMessage && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n\n              {hasNoPeopleOnServer && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {hasNoMatchingPeople && (\n                <p>\n                  There are no people matching the current search criteria\n                </p>\n              )}\n\n              {!!people.length && (\n                <PeopleTable\n                  people={people}\n                  filteredPeople={filteredPeople}\n                  setFilteredPeople={setFilteredPeople}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />} />\n        <Route path=\"people/:slug?\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}