{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage/HomePage.tsx","types/SortParam.ts","utils/getParentHelper.ts","utils/variables.ts","api.ts","utils/searchHelper.ts","components/SearchLink/SearchLink.tsx","components/FilterCenturyItem/FilterCenturyItem.tsx","types/ColumnNames.ts","types/PersonSex.ts","components/FilterSexItem/FilterSexItem.tsx","components/PeopleFilters/PeopleFilters.tsx","components/Loader/Loader.tsx","types/Sex.ts","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/ColumnNameItem/ColumnNameItem.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","useSearchParams","searchParams","getLinkClass","isActive","cn","className","role","to","pathname","search","toString","App","HomePage","SortParam","getParent","people","parentName","find","name","CENTURIES","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","getFilteredPeopleHelper","query","toLowerCase","includes","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","CenturyItem","curCentury","centuries","getAll","isSelected","filter","age","ColumnNames","PersonSex","PersonSexItem","sexValue","sex","get","sexParam","PeopleFilters","setSearchParams","keys","map","type","placeholder","onChange","event","target","century","length","Loader","Sex","PersonLink","person","slug","isFemale","FEMALE","PersonItem","selectedPersonSlug","born","died","fatherName","motherName","mother","father","ColumnName","sortOption","lowerCasedValue","sort","order","hasFaSort","hasFaSortUp","hasFaSortDown","PeopleTable","filteredPeople","useParams","PeoplePage","useState","setPeople","sortedPeople","sortParam","a","b","Name","localeCompare","Born","Died","getSortedPeople","filterOption","personBirthCentury","Math","ceil","getFilteredPeople","isLoading","setIsLoading","hasError","setHasError","reverse","useEffect","getPeople","peopleFromServer","undefined","addParent","catch","finally","hasPeopleFilter","hasErrorMessage","hasNoPeopleOnServer","hasNoMatchingPeople","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ddaf0cd0.chunk.js","sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const [searchParams] = useSearchParams();\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to={{\n              pathname: 'people',\n              search: searchParams.toString(),\n            }}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export enum SortParam {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { Person } from '../types';\n\nexport function getParent(people: Person[], parentName: string) {\n  return people.find(({ name }) => name === parentName);\n}\n","export const NOT_SET_VALUE = '-';\n\nexport const YEARS_IN_CENTURY = 100;\n\nexport const DESC_SORT = 'desc';\n\nexport const CENTURIES = ['16', '17', '18', '19', '20'];\n\n// eslint-disable-next-line max-len\nexport const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n","import { FilterType } from './types/FilterType';\nimport { Person } from './types/Person';\nimport { SortParam } from './types/SortParam';\nimport { getParent } from './utils/getParentHelper';\nimport { API_URL, YEARS_IN_CENTURY } from './utils/variables';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n\nexport function addParent(people: Person[]) {\n  return people.map(person => {\n    const { motherName, fatherName } = person;\n\n    return {\n      ...person,\n      mother: motherName ? getParent(people, motherName) : undefined,\n      father: fatherName ? getParent(people, fatherName) : undefined,\n    };\n  });\n}\n\nexport function getSortedPeople(\n  people: Person[],\n  sortParam: SortParam | string,\n) {\n  if (sortParam) {\n    return [...people].sort((a, b) => {\n      switch (sortParam) {\n        case (SortParam.Name):\n        case (SortParam.Sex): {\n          return a[sortParam].localeCompare(b[sortParam]);\n        }\n\n        case (SortParam.Born):\n        case (SortParam.Died): {\n          return a[sortParam] - (b[sortParam]);\n        }\n\n        default: {\n          return 0;\n        }\n      }\n    });\n  }\n\n  return [...people];\n}\n\nconst getFilteredPeopleHelper = (\n  name: string | null,\n  query: string,\n) => {\n  return name?.toLowerCase().includes(query);\n};\n\nexport function getFilteredPeople(\n  filterOption: FilterType,\n  people: Person[],\n) {\n  let filteredPeople = people;\n\n  if (filterOption.sex) {\n    filteredPeople = filteredPeople\n      .filter(person => person.sex === filterOption.sex);\n  }\n\n  if (filterOption.centuries.length) {\n    filteredPeople = filteredPeople.filter(person => {\n      const personBirthCentury = Math.ceil(person.born / YEARS_IN_CENTURY);\n\n      return filterOption.centuries.includes(personBirthCentury.toString());\n    });\n  }\n\n  if (filterOption.query) {\n    filteredPeople = filteredPeople\n      .filter(person => {\n        const query = filterOption.query.toLowerCase();\n\n        return getFilteredPeopleHelper(person.name, query)\n          || getFilteredPeopleHelper(person.motherName, query)\n          || getFilteredPeopleHelper(person.fatherName, query);\n      });\n  }\n\n  return filteredPeople;\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\ntype Props = {\n  value: string,\n};\n\nexport const CenturyItem: React.FC<Props> = ({ value }) => {\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const isSelected = centuries.includes(value);\n\n  const toggleCentury = (curCentury: string) => {\n    return centuries.includes(curCentury)\n      ? centuries.filter((age: string) => age !== curCentury)\n      : [...centuries, curCentury];\n  };\n\n  return (\n    <SearchLink\n      data-cy=\"century\"\n      className={cn(\n        'button',\n        'mr-1',\n        { 'is-info': isSelected },\n      )}\n      params={{ centuries: toggleCentury(value) }}\n    >\n      {value}\n    </SearchLink>\n  );\n};\n","export enum ColumnNames {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n}\n","export enum PersonSex {\n  All = '',\n  Male = 'm',\n  Female = 'f',\n}\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { SearchLink } from '../SearchLink';\nimport { PersonSex } from '../../types';\n\ntype Props = {\n  sexValue: keyof typeof PersonSex,\n};\n\nexport const PersonSexItem: React.FC<Props> = ({ sexValue }) => {\n  const [searchParams] = useSearchParams();\n  const sex = searchParams.get('sex') || '';\n  let sexParam: string | null = PersonSex[sexValue];\n  let isActive = sex === sexParam;\n\n  if (sexValue === 'All') {\n    sexParam = null;\n    isActive = !sex;\n  }\n\n  return (\n    <SearchLink\n      className={cn(\n        { 'is-active': isActive },\n      )}\n      params={{ sex: sexParam }}\n    >\n      {sexValue}\n    </SearchLink>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { CenturyItem } from '../FilterCenturyItem';\nimport { PersonSexItem } from '../FilterSexItem';\nimport { SearchLink } from '../SearchLink';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { PersonSex } from '../../types';\nimport { CENTURIES } from '../../utils/variables';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams,\n        { query: event.target.value || null }),\n    );\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {(Object.keys(PersonSex) as Array<keyof typeof PersonSex>)\n          .map(sexValue => (\n            <PersonSexItem key={sexValue} sexValue={sexValue} />\n          ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            value={query}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map(century => (\n              <CenturyItem\n                key={century}\n                value={century}\n              />\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn(\n                'button',\n                'is-success',\n                { 'is-outlined': !!centuries.length },\n              )}\n              params={{ centuries: [] }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ query: null, centuries: null, sex: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum Sex {\n  FEMALE = 'f',\n  MALE = 'm',\n}\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { Sex } from '../../types/Sex';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  const [searchParams] = useSearchParams();\n\n  const isFemale = sex === Sex.FEMALE;\n\n  return (\n    <Link\n      to={`../${slug}?${searchParams.toString()}`}\n      className={cn({ 'has-text-danger': isFemale })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { NOT_SET_VALUE } from '../../utils/variables';\n\ntype Props = {\n  person: Person;\n  selectedPersonSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({\n  person,\n  selectedPersonSlug,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  const isSelected = selectedPersonSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n\n      <td>{born}</td>\n\n      <td>{died}</td>\n\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : motherName || NOT_SET_VALUE}\n      </td>\n\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : fatherName || NOT_SET_VALUE}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { SearchLink } from '../SearchLink';\nimport { ColumnNames } from '../../types';\n\ntype Props = {\n  value: keyof typeof ColumnNames,\n};\n\nexport const ColumnName: React.FC<Props> = ({ value }) => {\n  const [searchParams] = useSearchParams();\n\n  const lowerCasedValue = value.toLowerCase();\n\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const getSortParams = (sortOption: string) => {\n    if (sortOption !== sort) {\n      return { sort: sortOption, order: null };\n    }\n\n    if (sort === sortOption && !order) {\n      return { sort: sortOption, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  const hasFaSort = lowerCasedValue !== sort;\n  const hasFaSortUp = lowerCasedValue === sort && !order;\n  const hasFaSortDown = order && lowerCasedValue === sort;\n\n  return (\n    <th key={value}>\n      <span className=\"is-flex is-flex-wrap-nowrap\">\n        {value}\n        <SearchLink\n          params={getSortParams(lowerCasedValue)}\n        >\n          <span className=\"icon\">\n            <i className={cn(\n              'fas',\n              { 'fa-sort': hasFaSort },\n              { 'fa-sort-up': hasFaSortUp },\n              { 'fa-sort-down': hasFaSortDown },\n            )}\n            />\n          </span>\n        </SearchLink>\n      </span>\n    </th>\n  );\n};\n","import React from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nimport { PersonItem } from '../PersonItem';\nimport { ColumnName } from '../ColumnNameItem';\nimport { ColumnNames, Person } from '../../types';\n\ntype Props = {\n  filteredPeople: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  filteredPeople,\n}) => {\n  const { slug } = useParams();\n  const selectedPersonSlug = slug || '';\n\n  if (!filteredPeople.length) {\n    return null;\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {(Object.keys(ColumnNames) as Array<keyof typeof ColumnNames>)\n            .map(name => (\n              <ColumnName\n                key={name}\n                value={name}\n              />\n            ))}\n\n          <th>Mother</th>\n\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredPeople.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            selectedPersonSlug={selectedPersonSlug}\n          />\n        ))}\n      </tbody>\n\n      <Outlet />\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport {\n  addParent,\n  getFilteredPeople,\n  getPeople,\n  getSortedPeople,\n} from '../../api';\n\nimport { FilterType, Person } from '../../types';\nimport { PeopleFilters } from '../../components/PeopleFilters';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { SortParam } from '../../types/SortParam';\nimport { DESC_SORT } from '../../utils/variables';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [searchParams] = useSearchParams();\n  const sort: typeof SortParam | string = searchParams.get('sort') || '';\n  const sortedPeople = getSortedPeople(people, sort);\n\n  const order = searchParams.get('order') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || '';\n\n  const filters: FilterType = {\n    query,\n    centuries,\n    sex,\n  };\n\n  const filteredPeople = getFilteredPeople(filters, sortedPeople);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  if (order === DESC_SORT) {\n    filteredPeople.reverse();\n  }\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(addParent(peopleFromServer));\n      })\n      .catch(() => {\n        setHasError(true);\n        setPeople([]);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const hasPeopleFilter = !isLoading && !!people.length;\n  const hasErrorMessage = hasError && !isLoading;\n  const hasNoPeopleOnServer = !people.length && !hasError && !isLoading;\n  const hasNoMatchingPeople = !isLoading\n  && !filteredPeople.length\n  && !hasNoPeopleOnServer;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {hasPeopleFilter && (<PeopleFilters />)}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (<Loader />)}\n\n              {hasErrorMessage && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n\n              {hasNoPeopleOnServer && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {hasNoMatchingPeople && (\n                <p>\n                  There are no people matching the current search criteria\n                </p>\n              )}\n\n              {!!people.length && (\n                <PeopleTable\n                  filteredPeople={filteredPeople}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}